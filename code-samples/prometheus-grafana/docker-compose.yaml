# To Launch Grafana:
# - `docker-compose up -d`
# - Navigate to `http://localhost:3000` in a browser and log in with the default credentials (admin/admin)
#
# To stop the containers: `docker-compose down`
#
# To stop the containers and discard state: `docker-compose down -v`

networks:
  monitoring:
    driver: bridge

services:
  grafana: 
    environment:
      - GF_USERS_DEFAULT_THEME=light
    image: grafana/grafana-oss
    networks:
      - monitoring
    ports:
      - 9000:3000
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
  metrics-generator:
    build:
      context: ./metrics-generator
    environment:
      - PYTHONUNBUFFERED=1 # Make python print statements show up in docker logs
    ports:
      - 8000:8000
    networks:
      - monitoring
  prometheus:
    image: prom/prometheus
    ports:
      - 9090:9090
    volumes:
      - prometheus_data:/prometheus
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/alert.rules.yml:/etc/prometheus/alert.rules.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    networks:
      - monitoring
  alertmanager:
    image: prom/alertmanager
    ports:
      - 9093:9093
    volumes:
      - ./alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
    networks:
      - monitoring

volumes:
  grafana-data:
    driver: local
  prometheus_data:
    driver: local
